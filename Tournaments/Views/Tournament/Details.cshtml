@model Tournaments.Models.Tournament

@{
    ViewBag.Title = @Model.Name + " - details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="http://maps.google.com/maps/api/js?sensor=true&key=AIzaSyD15Q_W5bVM8ID70NFRhBcgJsXhsV7uhxs" type="text/javascript"></script>

<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<h2>@Model.Name</h2>

<div>
	<hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Sport)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Sport)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Owner)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Owner.UserName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.HiddenFor(model => model.Address, new { @id = "address" })
            <div id="map_canvas" style="height: 300px; margin-bottom: 10px;margin-top: 10px"></div>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MaxPlayersNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MaxPlayersNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RegistrationDeadline)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RegistrationDeadline)
        </dd>
    </dl>
    
    <br/>
</div>
<p>
    @if (ViewBag.currentUserId == Model.Owner.Id)
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.ID })
        @:|
    }
    
    @Html.ActionLink("Back to List", "Index")
</p>

@section scripts {
<section class="scripts">

    <script type="text/javascript">

    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var maltaPoznan = new google.maps.LatLng(52.402745, 16.981483);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 8,
            center: maltaPoznan,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // a sample list of JSON encoded data of places to visit in Tunisia
        // you can either make up a JSON list server side, or call it from a controller using JSONResult
        //var data = [
        //          { "Id": 1, "PlaceName": "Zaghouan", "GeoLong": "36.401081", "GeoLat": "10.16596" },
        //          { "Id": 2, "PlaceName": "Hammamet ", "GeoLong": "36.4", "GeoLat": "10.616667" },
        //          { "Id": 3, "PlaceName": "Sousse", "GeoLong": "35.8329809", "GeoLat": "10.63875" },
        //          { "Id": 4, "PlaceName": "Sfax", "GeoLong": "34.745159", "GeoLat": "10.7613" }
        //       ];

        var address = document.getElementById("address").value;
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode({ 'address': address }, function (results, status) {

            if (status == 'OK') {
                map.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    'map': map,
                    'position': results[0].geometry.location,
                    'title': address
                });
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')
                // put in some information about each json object - in this case, the opening hours.
                var infowindow = new google.maps.InfoWindow({
                    content: "<div class='infoDiv'><h2>" + address + "</div></div>"
                });
                // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });
            }
        });
        
    }

    </script>
</section>
}
